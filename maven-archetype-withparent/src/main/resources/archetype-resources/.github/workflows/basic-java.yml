name: Java CI

on: [ push ]

env:
  GITHUBLOGIN: ${{secrets.GITHUBLOGIN}}
  GITHUBTOKEN: ${{secrets.GITHUBTOKEN}}
  SONAR_URL: ${{secrets.SONAR_URL}}
  SONAR_TOKEN: ${{secrets.SONAR_TOKEN}}
  DOCKERHUB_USERNAME: ${{secrets.DOCKERHUB_USERNAME}}
  DOCKERHUB_TOKEN: ${{secrets.DOCKERHUB_TOKEN}}
  
jobs:
  # This job build, test and stage the artefact and the website for the develop branch
  maven-build-test-site:
    # The tags to select the runner
    runs-on: [ self-hosted, Linux ]
    steps:
      # Environment setup
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'maven'
      - name: Set up Maven
        uses: stCarolas/setup-maven@v4.5
        with:
          maven-version: 3.8.6
      - name: Extract branch name
        shell: bash
        run: echo "MY_BRANCH=$(git rev-parse --abbrev-ref HEAD | tr / _)" >> $GITHUB_ENV
      # Build and test
      - name: Build and Test with Maven
        run: >
          mvn --batch-mode \
              --update-snapshots \
              --color always \
              --settings docker/ci-settings.xml \
              -P jacoco \
              verify
      # Check quality with SonarQube
        ### THIS STEP MUST BE ENABLED BY CONFIGURING : SONAR_URL and SONAR_TOKEN secrets.
      - name: Quality check with Sonarqube
        shell: bash
        if: env.SONAR_URL != null && env.SONAR_TOKEN != null
        run: >
          mvn -DskipTests=true \
            --batch-mode \
            --color always \
            --settings docker/ci-settings.xml \
            -Dsonar.branch.name=$MY_BRANCH \
            -P jacoco,sonar \
            sonar:sonar
      # Stage artifact
      - run: mkdir staging && cp target/*.jar staging
      - name: Stage artifacts
        uses: actions/upload-artifact@v3
        with:
          name: Package
          path: staging
      - name: Install SSH Key
        uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      # Build and deploy project site
      - name: Build and deploy site with Maven
        if: ${{github.ref == 'refs/heads/develop'}}
        run: >
          mvn --batch-mode \
              --color always \
              --settings docker/ci-settings.xml \
              site:site site-deploy